{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "projectfinal"
		},
		"ls_adls2_source_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls2_source'"
		},
		"ls_file_onprem_source_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_file_onprem_source'"
		},
		"ls_azkv_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://projectazkv.vault.azure.net/"
		},
		"ls_adls2_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://projectfinalsa.dfs.core.windows.net/"
		},
		"ls_file_onprem_source_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Project\\SH"
		},
		"ls_file_onprem_source_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "s.rakashi@dxc.com"
		},
		"ls_ datbricks_notebooks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1217-035912-arqprkso"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_azkv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_azkv_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfhosted-IR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls2_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls2_source_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls2_source_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_deltalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricksDeltaLake",
				"typeProperties": {
					"domain": "https://adb-2349866804351260.0.azuredatabricks.net",
					"clusterId": "1217-035912-arqprkso",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_azkv",
							"type": "LinkedServiceReference"
						},
						"secretName": "projectazkvadbkey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azkv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_file_onprem_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ls_file_onprem_source_properties_typeProperties_host')]",
					"userId": "[parameters('ls_file_onprem_source_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_file_onprem_source_password')]"
					}
				},
				"connectVia": {
					"referenceName": "selfhosted-IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/selfhosted-IR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2_source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_folder_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().ds_folder_name",
							"type": "Expression"
						},
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls2_binarysource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2_source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_foldername": {
						"type": "string"
					},
					"ds_filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('sales','/',dataset().ds_foldername)",
							"type": "Expression"
						},
						"fileSystem": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_aldls2_salesdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls2_source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ds_folder_name": {
						"type": "string"
					},
					"ds_file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ds_file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('landing/sales/',dataset().ds_folder_name)",
							"type": "Expression"
						},
						"fileSystem": "salesdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls2_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ datbricks_notebooks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-2349866804351260.0.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_azkv",
							"type": "LinkedServiceReference"
						},
						"secretName": "projectazkvadbkey"
					},
					"existingClusterId": "[parameters('ls_ datbricks_notebooks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azkv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_deltalake_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_deltalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDatabricksDeltaLakeDataset",
				"typeProperties": {
					"database": "jobs",
					"table": "job_list_dynamic"
				},
				"schema": [
					{
						"name": "job_id",
						"type": "string"
					},
					{
						"name": "job_name",
						"type": "string"
					},
					{
						"name": "source_database_host",
						"type": "string"
					},
					{
						"name": "source_database_username",
						"type": "string"
					},
					{
						"name": "source_database_password",
						"type": "string"
					},
					{
						"name": "source_database_name",
						"type": "string"
					},
					{
						"name": "source_schema_name",
						"type": "string"
					},
					{
						"name": "source_table_name",
						"type": "string"
					},
					{
						"name": "source_file_path",
						"type": "string"
					},
					{
						"name": "source_file_username",
						"type": "string"
					},
					{
						"name": "source_file_password",
						"type": "string"
					},
					{
						"name": "source_folder_name",
						"type": "string"
					},
					{
						"name": "source_file_name",
						"type": "string"
					},
					{
						"name": "source_file_type",
						"type": "string"
					},
					{
						"name": "landing_zone_file_path",
						"type": "string"
					},
					{
						"name": "landing_zone_folder_name",
						"type": "string"
					},
					{
						"name": "landing_zone_file_name",
						"type": "string"
					},
					{
						"name": "landing_zone_file_type",
						"type": "string"
					},
					{
						"name": "staging_zone_database_name",
						"type": "string"
					},
					{
						"name": "staging_zone_schema_name",
						"type": "string"
					},
					{
						"name": "staging_zone_table_name",
						"type": "string"
					},
					{
						"name": "staging_zone_table_pk_column",
						"type": "string"
					},
					{
						"name": "curation_zone_database_name",
						"type": "string"
					},
					{
						"name": "curation_zone_schema_name",
						"type": "string"
					},
					{
						"name": "curation_zone_table_name",
						"type": "string"
					},
					{
						"name": "curation_zone_table_pk_column",
						"type": "string"
					},
					{
						"name": "dw_zone_database_name",
						"type": "string"
					},
					{
						"name": "dw_zone_schema_name",
						"type": "string"
					},
					{
						"name": "dw_zone_table_name",
						"type": "string"
					},
					{
						"name": "dw_zone_table_pk_column",
						"type": "string"
					},
					{
						"name": "raw_zone_file_path",
						"type": "string"
					},
					{
						"name": "raw_zone_folder_name",
						"type": "string"
					},
					{
						"name": "raw_zone_file_name",
						"type": "string"
					},
					{
						"name": "raw_zone_file_type",
						"type": "string"
					},
					{
						"name": "pyspark_schema",
						"type": "string"
					},
					{
						"name": "table_type",
						"type": "string"
					},
					{
						"name": "job_type",
						"type": "string"
					},
					{
						"name": "job_status",
						"type": "string"
					},
					{
						"name": "watermark",
						"type": "timestamp"
					},
					{
						"name": "created_on",
						"type": "timestamp"
					},
					{
						"name": "created_by",
						"type": "string"
					},
					{
						"name": "updated_on",
						"type": "timestamp"
					},
					{
						"name": "updated_by",
						"type": "string"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_deltalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_child_sales_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StartLogging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": "insert into JOBS.pipeline_log select \nsha2('@{pipeline().RunId}',256),@{pipeline().parameters.job_id},'@{pipeline().DataFactory}','@{pipeline().Pipeline}','@{pipeline().RunId}','@{pipeline().TriggerType}','@{pipeline().TriggerId}','\n@{pipeline().TriggerName}', '@{pipeline().TriggerTime}','','','','','','','','','','','','','','','','','','','','','','','',''"
							},
							"dataset": {
								"referenceName": "ds_deltalake_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Get Metadata_adls2",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "StartLogging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_adls2_source",
								"type": "DatasetReference",
								"parameters": {
									"ds_folder_name": {
										"value": "@pipeline().parameters.source_folder_name",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter_Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata_adls2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata_adls2').output",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type,'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach_CopyFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter_Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter_Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "adls2_landing",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ds_adls2_binarysource",
											"type": "DatasetReference",
											"parameters": {
												"ds_foldername": {
													"value": "@pipeline().parameters.source_folder_name",
													"type": "Expression"
												},
												"ds_filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_aldls2_salesdata",
											"type": "DatasetReference",
											"parameters": {
												"ds_folder_name": {
													"value": "@pipeline().parameters.landing_zone_folder_name",
													"type": "Expression"
												},
												"ds_file_name": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LandingToStaging",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach_CopyFile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_landing_staging",
							"baseParameters": {
								"landing_zone_file_path": {
									"value": "@pipeline().parameters.landing_zone_file_path",
									"type": "Expression"
								},
								"landing_zone_folder_name": {
									"value": "@pipeline().parameters.landing_zone_folder_name",
									"type": "Expression"
								},
								"landing_zone_file_name": {
									"value": "@pipeline().parameters.landing_zone_file_name",
									"type": "Expression"
								},
								"landing_zone_file_type": {
									"value": "@pipeline().parameters.landing_zone_file_type",
									"type": "Expression"
								},
								"staging_zone_database_name": {
									"value": "@pipeline().parameters.staging_zone_database_name",
									"type": "Expression"
								},
								"staging_zone_table_name": {
									"value": "@pipeline().parameters.staging_zone_table_name",
									"type": "Expression"
								},
								"staging_zone_table_pk_column": {
									"value": "@pipeline().parameters.staging_zone_table_pk_column",
									"type": "Expression"
								},
								"pyspark_schema": {
									"value": "@pipeline().parameters.pyspark_schema",
									"type": "Expression"
								},
								"job_name": {
									"value": "@pipeline().parameters.job_name",
									"type": "Expression"
								},
								"job_id": {
									"value": "@pipeline().parameters.job_id",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_ datbricks_notebooks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LandingToStaging_Log",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LandingToStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": "UPDATE JOBS.pipeline_log SET \nlanding_rows=@{activity('LandingToStaging').output.runOutput.landingRows},rejected_rows=@{activity('LandingToStaging').output.runOutput.rejectedRows},\nstaging_rows=@{activity('LandingToStaging').output.runOutput.stagingRows} WHERE pipeline_runid='@{pipeline().RunId}'"
							},
							"dataset": {
								"referenceName": "ds_deltalake_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "LandingToStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 30
						}
					},
					{
						"name": "StagingToCuration",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_staging_curated",
							"baseParameters": {
								"staging_zone_database_name": {
									"value": "@pipeline().parameters.staging_zone_database_name",
									"type": "Expression"
								},
								"staging_zone_table_name": {
									"value": "@pipeline().parameters.staging_zone_table_name",
									"type": "Expression"
								},
								"staging_zone_table_pk_column": {
									"value": "@pipeline().parameters.staging_zone_table_pk_column",
									"type": "Expression"
								},
								"curation_zone_database_name": {
									"value": "@pipeline().parameters.curation_zone_database_name",
									"type": "Expression"
								},
								"curation_zone_table_name": {
									"value": "@pipeline().parameters.curation_zone_table_name",
									"type": "Expression"
								},
								"curation_zone_table_pk_column": {
									"value": "@pipeline().parameters.curation_zone_table_pk_column",
									"type": "Expression"
								},
								"job_name": {
									"value": "@pipeline().parameters.job_name",
									"type": "Expression"
								},
								"job_id": {
									"value": "@pipeline().parameters.job_id",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_ datbricks_notebooks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StagingToCurationLog",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "StagingToCuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": "UPDATE JOBS.pipeline_log SET \ncuration_read_rows=@{activity('StagingToCuration').output.runOutput.curationRows['num_affected_rows']},curation_inserted_rows=@{activity('StagingToCuration').output.runOutput.curat\nionRows['num_inserted_rows']},curation_updated_rows=@{activity('StagingToCuration').output.runOutput.curationRows['num_updated_rows']} WHERE \npipeline_runid='@{pipeline().RunId}'"
							},
							"dataset": {
								"referenceName": "ds_deltalake_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "StagingToCuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "IFDim",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.table_type,'dim')\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CurationToDWHDim",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_curation_dwh",
										"baseParameters": {
											"curation_zone_database_name": {
												"value": "@pipeline().parameters.curation_zone_database_name",
												"type": "Expression"
											},
											"curation_zone_table_name": {
												"value": "@pipeline().parameters.curation_zone_table_name",
												"type": "Expression"
											},
											"curation_zone_table_pk_column": {
												"value": "@pipeline().parameters.curation_zone_table_pk_column",
												"type": "Expression"
											},
											"dw_zone_database_name": {
												"value": "@pipeline().parameters.dw_zone_database_name",
												"type": "Expression"
											},
											"dw_zone_table_name": {
												"value": "@pipeline().parameters.dw_zone_table_name",
												"type": "Expression"
											},
											"dw_zone_table_pk_column": {
												"value": "@pipeline().parameters.dw_zone_table_pk_column",
												"type": "Expression"
											},
											"job_id": {
												"value": "@pipeline().parameters.job_id",
												"type": "Expression"
											},
											"job_name": {
												"value": "@pipeline().parameters.job_name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_ datbricks_notebooks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "CurationToDWHDim_Log",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "CurationToDWHDim",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureDatabricksDeltaLakeSource",
											"query": "UPDATE JOBS.pipeline_log SET \nexecution_status='SUCCESS',dwh_read_rows=@{activity('CurationToDWHDim').output.runOutput.dwhRows['num_affected_rows']},dwh_inserted_rows=@{activity('CurationToDWHDim').output.runOutput.dwhRows['num_inserted_rows']},dwh_updated_rows=@{activity('CurationToDWHDim').output.runOutput.dwhRows['num_updated_rows']} WHERE pipeline_runid='@{pipeline().RunId}'"
										},
										"dataset": {
											"referenceName": "ds_deltalake_lookup",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					},
					{
						"name": "SwitchFacts",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "IFDim",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.job_name",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "sales_transaction",
									"activities": [
										{
											"name": "CurationTodwhSalesFact",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_fact_load",
												"baseParameters": {
													"staging_zone_database_name": {
														"value": "@pipeline().parameters.staging_zone_database_name",
														"type": "Expression"
													},
													"staging_zone_table_name": {
														"value": "@pipeline().parameters.staging_zone_table_name",
														"type": "Expression"
													},
													"staging_zone_table_pk_column": {
														"value": "@pipeline().parameters.staging_zone_table_pk_column",
														"type": "Expression"
													},
													"curation_zone_database_name": {
														"value": "@pipeline().parameters.curation_zone_database_name",
														"type": "Expression"
													},
													"curation_zone_table_name": {
														"value": "@pipeline().parameters.curation_zone_table_name",
														"type": "Expression"
													},
													"curation_zone_table_pk_column": {
														"value": "@pipeline().parameters.curation_zone_table_pk_column",
														"type": "Expression"
													},
													"dw_zone_database_name": {
														"value": "@pipeline().parameters.dw_zone_database_name",
														"type": "Expression"
													},
													"dw_zone_table_name": {
														"value": "@pipeline().parameters.dw_zone_table_name",
														"type": "Expression"
													},
													"dw_zone_table_pk_column": {
														"value": "@pipeline().parameters.dw_zone_table_pk_column",
														"type": "Expression"
													},
													"job_id": {
														"value": "@pipeline().parameters.job_id",
														"type": "Expression"
													},
													"job_name": {
														"value": "@pipeline().parameters.job_name",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "ls_ datbricks_notebooks",
												"type": "LinkedServiceReference"
											}
										}
									]
								},
								{
									"value": "cost_transaction",
									"activities": [
										{
											"name": "CurationToDWHCostFact",
											"type": "DatabricksNotebook",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_costs_fact_load",
												"baseParameters": {
													"staging_zone_database_name": {
														"value": "@pipeline().parameters.staging_zone_database_name",
														"type": "Expression"
													},
													"staging_zone_table_name": {
														"value": "@pipeline().parameters.staging_zone_table_name",
														"type": "Expression"
													},
													"staging_zone_table_pk_column": {
														"value": "@pipeline().parameters.staging_zone_table_pk_column",
														"type": "Expression"
													},
													"curation_zone_database_name": {
														"value": "@pipeline().parameters.curation_zone_database_name",
														"type": "Expression"
													},
													"curation_zone_table_name": {
														"value": "@pipeline().parameters.curation_zone_table_name",
														"type": "Expression"
													},
													"curation_zone_table_pk_column": {
														"value": "@pipeline().parameters.curation_zone_table_pk_column",
														"type": "Expression"
													},
													"dw_zone_database_name": {
														"value": "@pipeline().parameters.dw_zone_database_name",
														"type": "Expression"
													},
													"dw_zone_table_name": {
														"value": "@pipeline().parameters.dw_zone_table_name",
														"type": "Expression"
													},
													"dw_zone_table_pk_column": {
														"value": "@pipeline().parameters.dw_zone_table_pk_column",
														"type": "Expression"
													},
													"job_id": {
														"value": "@pipeline().parameters.job_id",
														"type": "Expression"
													},
													"job_name": {
														"value": "@pipeline().parameters.job_name",
														"type": "Expression"
													}
												}
											},
											"linkedServiceName": {
												"referenceName": "ls_ datbricks_notebooks",
												"type": "LinkedServiceReference"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"job_id": {
						"type": "string"
					},
					"job_name": {
						"type": "string"
					},
					"pyspark_schema": {
						"type": "string"
					},
					"landing_zone_file_type": {
						"type": "string"
					},
					"landing_zone_file_name": {
						"type": "string"
					},
					"landing_zone_folder_name": {
						"type": "string"
					},
					"landing_zone_file_path": {
						"type": "string"
					},
					"curation_zone_table_pk_column": {
						"type": "string"
					},
					"curation_zone_table_name": {
						"type": "string"
					},
					"curation_zone_database_name": {
						"type": "string"
					},
					"staging_zone_table_pk_column": {
						"type": "string"
					},
					"staging_zone_table_name": {
						"type": "string"
					},
					"staging_zone_database_name": {
						"type": "string"
					},
					"source_folder_name": {
						"type": "string"
					},
					"dw_zone_table_pk_column": {
						"type": "string"
					},
					"dw_zone_table_name": {
						"type": "string"
					},
					"dw_zone_database_name": {
						"type": "string"
					},
					"table_type": {
						"type": "string"
					}
				},
				"folder": {
					"name": "sales_history_data"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_deltalake_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls2_source')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_ datbricks_notebooks')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls2_binarysource')]",
				"[concat(variables('factoryId'), '/datasets/ds_aldls2_salesdata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_master_sales_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_Getjobdetails",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDatabricksDeltaLakeSource",
								"query": "select * from jobs.JOB_LIST_DYNAMIC\norder by job_id"
							},
							"dataset": {
								"referenceName": "ds_deltalake_lookup",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Getjobdetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Getjobdetails').output.value",
								"type": "Expression"
							},
							"batchCount": 5,
							"activities": [
								{
									"name": "pl_child_sales_load",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_child_sales_load",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"job_id": {
												"value": "@item().job_id",
												"type": "Expression"
											},
											"job_name": {
												"value": "@item().job_name",
												"type": "Expression"
											},
											"pyspark_schema": {
												"value": "@item().pyspark_schema",
												"type": "Expression"
											},
											"landing_zone_file_type": {
												"value": "@item().landing_zone_file_type",
												"type": "Expression"
											},
											"landing_zone_file_name": {
												"value": "@item().landing_zone_file_name",
												"type": "Expression"
											},
											"landing_zone_folder_name": {
												"value": "@item().landing_zone_folder_name",
												"type": "Expression"
											},
											"landing_zone_file_path": {
												"value": "@item().landing_zone_file_path",
												"type": "Expression"
											},
											"curation_zone_table_pk_column": {
												"value": "@item().curation_zone_table_pk_column",
												"type": "Expression"
											},
											"curation_zone_table_name": {
												"value": "@item().curation_zone_table_name",
												"type": "Expression"
											},
											"curation_zone_database_name": {
												"value": "@item().curation_zone_database_name",
												"type": "Expression"
											},
											"staging_zone_table_pk_column": {
												"value": "@item().staging_zone_table_pk_column",
												"type": "Expression"
											},
											"staging_zone_table_name": {
												"value": "@item().staging_zone_table_name",
												"type": "Expression"
											},
											"staging_zone_database_name": {
												"value": "@item().staging_zone_database_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "sales_history_data"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_deltalake_lookup')]",
				"[concat(variables('factoryId'), '/pipelines/pl_child_sales_load')]"
			]
		}
	]
}