{
	"name": "pl_child_sales_load",
	"properties": {
		"activities": [
			{
				"name": "StartLogging",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource"
					},
					"dataset": {
						"referenceName": "ds_deltalake_lookup",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Get Metadata_adls2",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "StartLogging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adls2_source",
						"type": "DatasetReference",
						"parameters": {
							"ds_folder_name": {
								"value": "@pipeline().parameters.source_folder_name",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems",
						"itemName",
						"itemType",
						"lastModified"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "Filter_Files",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Get Metadata_adls2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata_adls2').output",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().type,'File')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "ForEach_CopyFile",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter_Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter_Files').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "adls2_landing",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_adls2_binarysource",
									"type": "DatasetReference",
									"parameters": {
										"ds_foldername": {
											"value": "@pipeline().parameters.source_folder_name",
											"type": "Expression"
										},
										"ds_filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_aldls2_salesdata",
									"type": "DatasetReference",
									"parameters": {
										"ds_folder_name": {
											"value": "@pipeline().parameters.landing_zone_folder_name",
											"type": "Expression"
										},
										"ds_file_name": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "LandingToStaging",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ForEach_CopyFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_landing_staging",
					"baseParameters": {
						"landing_zone_folder_name": {
							"value": "@pipeline().parameters.landing_zone_folder_name",
							"type": "Expression"
						},
						"landing_zone_file_name": {
							"value": "@pipeline().parameters.landing_zone_file_name",
							"type": "Expression"
						},
						"landing_zone_file_type": {
							"value": "@pipeline().parameters.landing_zone_file_type",
							"type": "Expression"
						},
						"staging_zone_database_name": {
							"value": "@pipeline().parameters.staging_zone_database_name",
							"type": "Expression"
						},
						"staging_zone_table_name": {
							"value": "@pipeline().parameters.staging_zone_table_name",
							"type": "Expression"
						},
						"staging_zone_table_pk_column": {
							"value": "@pipeline().parameters.staging_zone_table_pk_column",
							"type": "Expression"
						},
						"pyspark_schema": {
							"value": "@pipeline().parameters.pyspark_schema",
							"type": "Expression"
						},
						"job_name": {
							"value": "@pipeline().parameters.job_name",
							"type": "Expression"
						},
						"job_id": {
							"value": "@pipeline().parameters.job_id",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_ datbricks_notebooks",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LandingToStaging_Log",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LandingToStaging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource",
						"query": "UPDATE JOBS.pipeline_log SET \nlanding_rows=@{activity('LandingToStaging').output.runOutput.landingRows},rejected_rows=@{activity('LandingToStaging').output.runOutput.rejectedRows},\nstaging_rows=@{activity('LandingToStaging').output.runOutput.stagingRows} WHERE pipeline_runid='@{pipeline().RunId}'"
					},
					"dataset": {
						"referenceName": "ds_deltalake_lookup",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "LandingToStaging",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 30
				}
			},
			{
				"name": "StagingToCuration",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_staging_curated",
					"baseParameters": {
						"staging_zone_database_name": {
							"value": "@pipeline().parameters.staging_zone_database_name",
							"type": "Expression"
						},
						"staging_zone_table_name": {
							"value": "@pipeline().parameters.staging_zone_table_name",
							"type": "Expression"
						},
						"staging_zone_table_pk_column": {
							"value": "@pipeline().parameters.staging_zone_table_pk_column",
							"type": "Expression"
						},
						"curation_zone_database_name": {
							"value": "@pipeline().parameters.curation_zone_database_name",
							"type": "Expression"
						},
						"curation_zone_table_name": {
							"value": "@pipeline().parameters.curation_zone_table_name",
							"type": "Expression"
						},
						"curation_zone_table_pk_column": {
							"value": "@pipeline().parameters.curation_zone_table_pk_column",
							"type": "Expression"
						},
						"job_name": {
							"value": "@pipeline().parameters.job_name",
							"type": "Expression"
						},
						"job_id": {
							"value": "@pipeline().parameters.job_id",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_ datbricks_notebooks",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "StagingToCurationLog",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "StagingToCuration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureDatabricksDeltaLakeSource",
						"query": "UPDATE JOBS.pipeline_log SET \ncuration_read_rows=@{activity('StagingToCuration').output.runOutput.curationRows['num_affected_rows']},curation_inserted_rows=@{activity('StagingToCuration').output.runOutput.curat\nionRows['num_inserted_rows']},curation_updated_rows=@{activity('StagingToCuration').output.runOutput.curationRows['num_updated_rows']} WHERE \npipeline_runid='@{pipeline().RunId}'"
					},
					"dataset": {
						"referenceName": "ds_deltalake_lookup",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Wait2",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "StagingToCuration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "IFDim",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Wait2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.table_type,'dim')\n",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "CurationToDWHDim",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_curation_dwh",
								"baseParameters": {
									"curation_zone_database_name": {
										"value": "@pipeline().parameters.curation_zone_database_name",
										"type": "Expression"
									},
									"curation_zone_table_name": {
										"value": "@pipeline().parameters.curation_zone_table_name",
										"type": "Expression"
									},
									"curation_zone_table_pk_column": {
										"value": "@pipeline().parameters.curation_zone_table_pk_column",
										"type": "Expression"
									},
									"dw_zone_database_name": {
										"value": "@pipeline().parameters.dw_zone_database_name",
										"type": "Expression"
									},
									"dw_zone_table_name": {
										"value": "@pipeline().parameters.dw_zone_table_name",
										"type": "Expression"
									},
									"dw_zone_table_pk_column": {
										"value": "@pipeline().parameters.dw_zone_table_pk_column",
										"type": "Expression"
									},
									"job_id": {
										"value": "@pipeline().parameters.job_id",
										"type": "Expression"
									},
									"job_name": {
										"value": "@pipeline().parameters.job_name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_ datbricks_notebooks",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "CurationToDWHDim_Log",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "CurationToDWHDim",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureDatabricksDeltaLakeSource",
									"query": "UPDATE JOBS.pipeline_log SET \nexecution_status='SUCCESS',dwh_read_rows=@{activity('CurationToDWHDim').output.runOutput.dwhRows['num_affected_rows']},dwh_inserted_rows=@{activity('CurationToDWHDim').output.runOutput.dwhRows['num_inserted_rows']},dwh_updated_rows=@{activity('CurationToDWHDim').output.runOutput.dwhRows['num_updated_rows']} WHERE pipeline_runid='@{pipeline().RunId}'"
								},
								"dataset": {
									"referenceName": "ds_deltalake_lookup",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			},
			{
				"name": "SwitchFacts",
				"type": "Switch",
				"dependsOn": [
					{
						"activity": "IFDim",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"on": {
						"value": "@pipeline().parameters.job_name",
						"type": "Expression"
					},
					"cases": [
						{
							"value": "sales_transaction",
							"activities": [
								{
									"name": "CurationTodwhSalesFact",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_sales_fact_load",
										"baseParameters": {
											"staging_zone_database_name": {
												"value": "@pipeline().parameters.staging_zone_database_name",
												"type": "Expression"
											},
											"staging_zone_table_name": {
												"value": "@pipeline().parameters.staging_zone_table_name",
												"type": "Expression"
											},
											"staging_zone_table_pk_column": {
												"value": "@pipeline().parameters.staging_zone_table_pk_column",
												"type": "Expression"
											},
											"curation_zone_database_name": {
												"value": "@pipeline().parameters.curation_zone_database_name",
												"type": "Expression"
											},
											"curation_zone_table_name": {
												"value": "@pipeline().parameters.curation_zone_table_name",
												"type": "Expression"
											},
											"curation_zone_table_pk_column": {
												"value": "@pipeline().parameters.curation_zone_table_pk_column",
												"type": "Expression"
											},
											"dw_zone_database_name": {
												"value": "@pipeline().parameters.dw_zone_database_name",
												"type": "Expression"
											},
											"dw_zone_table_name": {
												"value": "@pipeline().parameters.dw_zone_table_name",
												"type": "Expression"
											},
											"dw_zone_table_pk_column": {
												"value": "@pipeline().parameters.dw_zone_table_pk_column",
												"type": "Expression"
											},
											"job_id": {
												"value": "@pipeline().parameters.job_id",
												"type": "Expression"
											},
											"job_name": {
												"value": "@pipeline().parameters.job_name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_ datbricks_notebooks",
										"type": "LinkedServiceReference"
									}
								}
							]
						},
						{
							"value": "cost_transaction",
							"activities": [
								{
									"name": "CurationToDWHCostFact",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Pyspark_Project_Dynamic/NB_costs_fact_load",
										"baseParameters": {
											"staging_zone_database_name": {
												"value": "@pipeline().parameters.staging_zone_database_name",
												"type": "Expression"
											},
											"staging_zone_table_name": {
												"value": "@pipeline().parameters.staging_zone_table_name",
												"type": "Expression"
											},
											"staging_zone_table_pk_column": {
												"value": "@pipeline().parameters.staging_zone_table_pk_column",
												"type": "Expression"
											},
											"curation_zone_database_name": {
												"value": "@pipeline().parameters.curation_zone_database_name",
												"type": "Expression"
											},
											"curation_zone_table_name": {
												"value": "@pipeline().parameters.curation_zone_table_name",
												"type": "Expression"
											},
											"curation_zone_table_pk_column": {
												"value": "@pipeline().parameters.curation_zone_table_pk_column",
												"type": "Expression"
											},
											"dw_zone_database_name": {
												"value": "@pipeline().parameters.dw_zone_database_name",
												"type": "Expression"
											},
											"dw_zone_table_name": {
												"value": "@pipeline().parameters.dw_zone_table_name",
												"type": "Expression"
											},
											"dw_zone_table_pk_column": {
												"value": "@pipeline().parameters.dw_zone_table_pk_column",
												"type": "Expression"
											},
											"job_id": {
												"value": "@pipeline().parameters.job_id",
												"type": "Expression"
											},
											"job_name": {
												"value": "@pipeline().parameters.job_name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_ datbricks_notebooks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"job_id": {
				"type": "string"
			},
			"job_name": {
				"type": "string"
			},
			"pyspark_schema": {
				"type": "string"
			},
			"staging_zone_table_pk_column": {
				"type": "string"
			},
			"staging_zone_table_name": {
				"type": "string"
			},
			"staging_zone_database_name": {
				"type": "string"
			},
			"landing_zone_file_type": {
				"type": "string"
			},
			"landing_zone_file_name": {
				"type": "string"
			},
			"landing_zone_folder_name": {
				"type": "string"
			},
			"landing_zone_file_path": {
				"type": "string"
			},
			"curation_zone_table_pk_column": {
				"type": "string"
			},
			"curation_zone_table_name": {
				"type": "string"
			},
			"curation_zone_database_name": {
				"type": "string"
			},
			"source_folder_name": {
				"type": "string"
			},
			"dw_zone_table_pk_column": {
				"type": "string"
			},
			"dw_zone_table_name": {
				"type": "string"
			},
			"dw_zone_database_name": {
				"type": "string"
			},
			"table_type": {
				"type": "string"
			}
		},
		"folder": {
			"name": "sales_history_data"
		},
		"annotations": []
	}
}